// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Board/> should render 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Unknown
    board={
      Array [
        "x",
        "x",
        "x",
      ]
    }
    computerPlay={[Function]}
    currentPlayer={
      Object {
        "name": "Toto",
      }
    }
    status="GAME_OVER"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "bsClass": "container",
      "children": Array [
        <Row
          bsClass="row"
          componentClass="div"
        >
          <Unknown
            currentPlayer={
              Object {
                "name": "Toto",
              }
            }
          />
        </Row>,
        <Row
          bsClass="row"
          componentClass="div"
        >
          <Unknown
            board={
              Array [
                "x",
                "x",
                "x",
              ]
            }
            computerPlay={[Function]}
            status="GAME_OVER"
          />
        </Row>,
      ],
      "className": "panel",
      "componentClass": "div",
      "fluid": false,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "bsClass": "row",
          "children": <Unknown
            currentPlayer={
              Object {
                "name": "Toto",
              }
            }
          />,
          "componentClass": "div",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "currentPlayer": Object {
              "name": "Toto",
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "bsClass": "row",
          "children": <Unknown
            board={
              Array [
                "x",
                "x",
                "x",
              ]
            }
            computerPlay={[Function]}
            status="GAME_OVER"
          />,
          "componentClass": "div",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "board": Array [
              "x",
              "x",
              "x",
            ],
            "computerPlay": [Function],
            "status": "GAME_OVER",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "bsClass": "container",
        "children": Array [
          <Row
            bsClass="row"
            componentClass="div"
          >
            <Unknown
              currentPlayer={
                Object {
                  "name": "Toto",
                }
              }
            />
          </Row>,
          <Row
            bsClass="row"
            componentClass="div"
          >
            <Unknown
              board={
                Array [
                  "x",
                  "x",
                  "x",
                ]
              }
              computerPlay={[Function]}
              status="GAME_OVER"
            />
          </Row>,
        ],
        "className": "panel",
        "componentClass": "div",
        "fluid": false,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bsClass": "row",
            "children": <Unknown
              currentPlayer={
                Object {
                  "name": "Toto",
                }
              }
            />,
            "componentClass": "div",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "currentPlayer": Object {
                "name": "Toto",
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bsClass": "row",
            "children": <Unknown
              board={
                Array [
                  "x",
                  "x",
                  "x",
                ]
              }
              computerPlay={[Function]}
              status="GAME_OVER"
            />,
            "componentClass": "div",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "board": Array [
                "x",
                "x",
                "x",
              ],
              "computerPlay": [Function],
              "status": "GAME_OVER",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
